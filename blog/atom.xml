<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>woojiq&#x27;s blog</title>
    <link href="https://woojiq.github.io/blog/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://woojiq.github.io/blog/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-11-23T00:00:00+00:00</updated>
    <id>https://woojiq.github.io/blog/atom.xml</id>
    <entry xml:lang="en">
        <title>Job from the first try</title>
        <published>2023-11-23T00:00:00+00:00</published>
        <updated>2023-11-23T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://woojiq.github.io/blog/job-from-the-first-try/" type="text/html"/>
        <id>https://woojiq.github.io/blog/job-from-the-first-try/</id>
        
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;Article is translated with the assistance of ChatGPT.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;After writing the &lt;a href=&quot;..&#x2F;am-i-actually-that-bad&#x2F;&quot;&gt;previous post&lt;&#x2F;a&gt; where I complained and tried to understand why, after submitting 50 resumes, I received 0 interview invitations, I was motivated to undertake a somewhat challenging and interesting project. However, the next morning, I saw some clarification questions in my email regarding the Embedded C&#x2F;C++ position. I responded to them as I had done before — simply highlighting how great I am but admitting that I wasn’t very knowledgeable in networking. At that moment, I didn’t really care whether anything would come out of it. I received an invitation for a call with the recruiter, where he was supposed to explain some details. I deliberately chose not to schedule it on the same day to have some time for preparation (thinking it wasn’t just a recruiter conversation). After the conversation, I was invited to my first interview.&lt;&#x2F;p&gt;
&lt;p&gt;In general, it’s not crucial what specific position it is, but for the sake of completeness, I’ll share. Since I’ve been actively using Linux for the past year, low-level jobs appeal to me, as I generally enjoy working with this operating system. The job title is “Embedded C&#x2F;C++,” with a focus on networking programming. Prior to this, I had only worked with high-level protocols like HTTP and had some understanding of TCP.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;preparation&quot;&gt;Preparation&lt;a class=&quot;zola-anchor&quot; href=&quot;#preparation&quot; aria-label=&quot;Anchor link for: preparation&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;I was scheduled for an interview a week after the recruiter conversation, so I had plenty of time to prepare, especially considering that I was basically a novice in networking programming and Linux details. I use the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.forestapp.cc&#x2F;&quot;&gt;Forest&lt;&#x2F;a&gt; app on my phone (similar to Pomodoro), and over the week, I logged approximately 27 productive hours. I spent almost all of that time reading and learning. In the last few days, a bit less, as I had covered the entire base, so there wasn’t much more to learn. During this week, I completed a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.coursera.org&#x2F;learn&#x2F;computer-networking&quot;&gt;course&lt;&#x2F;a&gt; on Coursera; wrote three small Bash &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prajwalpd7&#x2F;BashBlaze-7-Days-of-Bash-Scripting-Challenge&#x2F;tree&#x2F;main&quot;&gt;scripts&lt;&#x2F;a&gt; to review syntax; read a mini-guide on &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;beej.us&#x2F;guide&#x2F;bgnet&#x2F;&quot;&gt;networking in C&lt;&#x2F;a&gt; and implemented several examples; explored cool Linux commands: strace, ss, tcpdump, traceroute, dig, etc; learned a bit about how Linux modules work; applied various &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;opensource.com&#x2F;sites&#x2F;default&#x2F;files&#x2F;gated-content&#x2F;inter-process_communication_in_linux.pdf&quot;&gt;IPC methods&lt;&#x2F;a&gt;: sockets, files, pipes, signals; read another book, &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;beej.us&#x2F;guide&#x2F;bgnet0&#x2F;&quot;&gt;Beej’s guide on networking&lt;&#x2F;a&gt;. Overall, looking at myself a week ago, I was a complete novice and felt quite clueless, but now I feel very knowledgeable. It’s great to see the progress, and even in case of a setback, I won’t be too disheartened because I’ve gained so much in this week. I don’t know how I would have faced the interview without these newfound skills; they now seem so fundamental, as if I couldn’t do without them. If I had another week, I might have delved more into OpenWRT, Cisco Packet Tracer, or something more detailed in Linux. Now I feel ready, and I hope for the best.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;expectation&quot;&gt;Expectation&lt;a class=&quot;zola-anchor&quot; href=&quot;#expectation&quot; aria-label=&quot;Anchor link for: expectation&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;The text up to this paragraph was written a day before my first interview, with the intention of capturing my thoughts and feelings. Well, and I don’t have much else to do right now. It would be great to land my first job after the initial interview; it would validate my words from the previous post about being “production ready”, but I simply didn’t have the opportunity to prove it. That would be nice, but even if things don’t work out, I’d at least like to be invited to a second round of interview, rather than being rejected after the first one, to get more practice. There could be challenges in general non-technical questions like “Why do you want to work for our company?” A small plus is that this will happen in my native language. While I’m proficient in English and can read, the last time I spoke with a native speaker was never. Overall, I assess my preparation at 8&#x2F;10, with 10 being perfect for this specific position. I could have practiced a bit more with C and sockets, but theoretically, I think I know enough. The main thing is to fall asleep, because it is impossible to do this before important days. Also, I’ve had a hard time falling asleep this past week, as I’ve been sedentary and constantly imagined hypothetical situations before bed, such as someone telling me how smart and cool I am, making me an instant middle developer (I once wanted to start job hunting for junior position when technically I’d already be a mid-level in terms of knowledge).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;outcomes-of-the-first-interview&quot;&gt;Outcomes of the first interview&lt;a class=&quot;zola-anchor&quot; href=&quot;#outcomes-of-the-first-interview&quot; aria-label=&quot;Anchor link for: outcomes-of-the-first-interview&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;The first interview went almost perfectly, and I received an invitation for the second round. The date is not set yet, but I have time to prepare. Since the first one was more theoretical, I think the next one will involve writing some code. Since I’ve been writing almost exclusively in Rust for the past year, I’ll need to write a project in C within a few days - something around a thousand lines of code. Why I said the interview went almost perfectly is because I made a few really silly mistakes that I’m embarrassed about. There were quite a few theoretical questions, one of which was: “How to determine Big&#x2F;Little Endian at runtime.” I understood that I needed to take a two-byte number and somehow read the first byte. However, I didn’t think to cast the pointer to type &lt;code&gt;char *&lt;&#x2F;code&gt;, so I gave up. That was the first mini-failure. I was asked to comment on a small Bash script, which I successfully did. At one point, I had to determine the complexity - I correctly said it was &lt;code&gt;O(n)&lt;&#x2F;code&gt;, but then for some reason, I changed my mind and said &lt;code&gt;O(1)&lt;&#x2F;code&gt; (awkward). The last task was a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.quora.com&#x2F;You-are-given-two-glass-balls-in-a-100-story-building-You-have-to-find-out-by-minimal-drops-which-is-the-lowest-floor-at-which-they-would-break-How-do-I-prove-it-mathematically&quot;&gt;logical puzzle&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;You are given two glass balls in a 100 story building. You have to find out by minimal drops which is the lowest floor at which they would break.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;I found the answer in 19 steps, making the 10th step. The most optimal answer is 14, which I didn’t think of, although the solution is not difficult.&lt;&#x2F;p&gt;
&lt;p&gt;So, in about 50 minutes of conversation, I made three mistakes, which are not critical but a bit sad because I know I could have avoided the first two if I had thought more before saying something. Overall, I enjoyed the experience, and I understand that I have the knowledge for this position since the interview wasn’t difficult (because I know the material). I won’t speculate on anything in advance; I just need to practice a bit with C code before the next stage.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;preparation-for-the-second-interview&quot;&gt;Preparation for the second interview&lt;a class=&quot;zola-anchor&quot; href=&quot;#preparation-for-the-second-interview&quot; aria-label=&quot;Anchor link for: preparation-for-the-second-interview&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;So, I had about 10 days to prepare for the next stage. I wouldn’t say I accomplished a lot, but I wrote a &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;woojiq&#x2F;wotils&#x2F;tree&#x2F;main&#x2F;ping&quot;&gt;ping&lt;&#x2F;a&gt; clone of almost 1000 lines. And it was quite useful; I had to use tcpdump to figure out why packets weren’t reaching me, delve into raw sockets, learn how to work with ipv6, understand icmp packets, and so on. Overall, I can say I’ve made progress and am ready for the next stage. And let’s not forget that I already have a streak of 30+ daily challenges on LeetCode, which I solved using C or C++. The next interview is in two hours. Over the past week, I realized that I’m about 50% eager to get the job, but also about 50% not very eager. Since July, I’ve been programming almost non-stop, grinding. And of course, it has its positive sides - I’ve become a much better version of myself. However, I’ve also compromised my health. So, I decided that before the New Year, it would be nice to take a break from programming for 2-4 weeks and relax because the grind starts again on January 2nd. I hope this mindset will only add confidence during the conversation because I won’t be too nervous, and whatever happens, happens. Regardless, I can say that I’ve developed significantly over the year, starting from scratch. I know my worth, and in any case, I won’t give up. Lightweight, baby.&lt;br &#x2F;&gt;
P.S. I’ve realized that the C language, while very interesting because you have to write everything yourself, work directly with memory, and interact with the OS, has a significant downside: it’s challenging to live without namespaces, generics, RAII. Rust has a slight edge in this regard.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;outcome&quot;&gt;Outcome&lt;a class=&quot;zola-anchor&quot; href=&quot;#outcome&quot; aria-label=&quot;Anchor link for: outcome&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Yeah buddy🦅. The second stage was basically similar to the previous one, but there were more questions about C, although there were still many about networks. Overall, I thought I was answering well, but since the communication wasn’t in my native language, it was a bit challenging to express my thoughts. They showed a snippet of code and asked how to improve it, and I think I handled it well. Then they asked a few questions about Rust, where I stumbled a bit. In general, I can say that I demonstrated a good level, but there were many nuances, so I can’t objectively evaluate it. But I didn’t care about the outcome.
After a few hours, I received an email with the content “Invitation to Join Our Team,” where they informed me about the next meeting, where, as I understand, there will be a discussion about salary and other organizational details. Well, by then, I hope nothing will break because I’ve come this far. The only thing that slightly disappointed me was that they didn’t ask me to share my screen to write something. I think it could have better demonstrated my level. I believe that after I calculated the time complexity of the Dijkstra algorithm in my head, they understood that I mean business.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;goodbye-carefree-days&quot;&gt;Goodbye Carefree Days&lt;a class=&quot;zola-anchor&quot; href=&quot;#goodbye-carefree-days&quot; aria-label=&quot;Anchor link for: goodbye-carefree-days&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;I am now leaving the carefree world of programming, where I could write anything, anytime. I could easily switch between technologies. I have a new mindset - to approach work responsibly, not just to do the job but to do it consciously, and to constantly improve independently of it. Although perhaps these are just my rose-colored glasses that will come off after the first day. Whatever the case, I found a job after the first interview, and I can be proud of that. Once again, I’ve proven to myself that no matter how much unlucky you may be, hard work can change that. Honestly, I could have kept these articles to myself, but perhaps someone will recognize themselves in these lines, maybe it will help someone. I’ll go touch the grass outside. &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;shorts&#x2F;IB7WVweJUV4&quot;&gt;Suwy&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Am I actually that bad?</title>
        <published>2023-11-01T00:00:00+00:00</published>
        <updated>2023-11-01T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://woojiq.github.io/blog/am-i-actually-that-bad/" type="text/html"/>
        <id>https://woojiq.github.io/blog/am-i-actually-that-bad/</id>
        
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;Article is translated with the assistance of ChatGPT.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer&lt;&#x2F;strong&gt;: These are mostly unstructured thoughts on paper for self-reflection.&lt;&#x2F;p&gt;
&lt;p&gt;I’ve submitted 50 resumes and received 0 interview invitations? Why? Am I really so bad?&lt;&#x2F;p&gt;
&lt;p&gt;Starting from the beginning of this year, I began intermittently responding to some job postings. I tried to land internships with IT giants and also with smaller companies. Since I lack commercial experience, it’s logical that I haven’t found a job yet. Moreover, this doesn’t concern me much as long as I have plans and personal goals. I didn’t set any ultimatums for myself, like needing to find a job as quickly as possible and start earning money. What surprises me is that I haven’t received any interview offers when I’m almost certain that after 2-3 interviews, I would recieve an offer because &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=9OEIwxcRh0k&amp;amp;ab_channel=SyedNaeem&quot;&gt;in my mind I am always the best&lt;&#x2F;a&gt;. Let’s try to break down why this happened.&lt;&#x2F;p&gt;
&lt;p&gt;At the beginning of 2023, I had almost zero goals and development knowledge in general. I had some knowledge of data structures (segment tree, dsu) and algorithms (dfs&#x2F;bfs, dp), which was sufficient for participating in Codeforces and achieving prizes in national programming competitions. Back then, I thought I was ready for the real world of programming and couldn’t understand why I didn’t have a job, which seems quite amusing now. At the start of the year, I decided to make some changes. I installed Linux and felt the need to refresh my skills, so I began learning Rust instead of C++ (I had some knowledge of syntax and stl). Simultaneously, I was working on creating my resume and applying for positions. At that time, I understood that I shouldn’t expect much because my biggest project was developed back in high school (winform Rubik’s cube solver), and most of my projects were no more than 1k lines of code. My progress was rapid, and every week, I realized that just a week ago, I was noob. At some point, I accepted fact there are few job opportunities for inexperienced programmers in Rust, but I believed that if I became an expert in one area, I could more easily pick up the technologies required to secure a job. And that people will see my possibilities in one technology and give a chance to work with something new.&lt;&#x2F;p&gt;
&lt;p&gt;It’s been almost a year, and I’ve applied to over 50 positions with no results. I might have overlooked this fact and moved on if it weren’t for two situations. While reading a few blogs, I came across something called &lt;a href=&quot;https:&#x2F;&#x2F;woojiq.github.io&#x2F;blog&#x2F;am-i-actually-that-bad&#x2F;recurse.com&quot;&gt;recurse center&lt;&#x2F;a&gt;. I immediately liked the idea of highly motivated programmers coming together to learn something new at their own pace or take a break from the routine work of developers. I saw that I could attend one of their batches at the beginning of the next year. I filled out the application, made it look good, explained why I was a great candidate. I hoped to meet many cool people and do a bunch of interesting things during those 6 weeks. But things didn’t go as planned, and I was rejected even here. To get in, you also have to pass a mini-interview after submitting your resume. At that moment, I began to wonder, “What’s wrong with me?” I understand I’m not an all-knowing professional, but 0&#x2F;50, how? When developers I know are getting jobs with less knowledge and ambition (in my subjective opinion). The second issue is that in university, we were told we must complete a practice (like internship), which we have to find ourselves. So my plans of not having a job for a few more years and becoming gigachad contributor in the open-source community (like &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyprwm&#x2F;Hyprland&quot;&gt;@vaxry&lt;&#x2F;a&gt;) fell apart.&lt;&#x2F;p&gt;
&lt;p&gt;Typically, a job application consists of two parts: your resume and responses to specific questions. I suspect that I might be making significant mistakes in both of these stages, but since I’m not an HR, I can’t determine if these are indeed mistakes. So, if you are knowledgeable in this area, please let me know ~ &lt;a href=&quot;mailto:yurii.shymon@gmail.com&quot;&gt;mail&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;&#x2F;Resume.pdf&quot;&gt;My current resume&lt;&#x2F;a&gt;. A few nuances. Firstly, I think it would be better to choose a standard LaTeX &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.overleaf.com&#x2F;latex&#x2F;templates&#x2F;omars-resume&#x2F;yvmjzbpysxwg&quot;&gt;template&lt;&#x2F;a&gt;, which looks more concise than this google docs one. But this is just a minor point. My main issue is that I have a peculiar habit – I don’t publish projects that I believe won’t be interesting or useful to someone. As a result, my github consists of forks or other repositories not very related to code. This makes me feel like all my projects are very basic and not worth mentioning in my resume, hence it looks so empty all the time. The only project I’m proud of was written in 2018. I don’t have much time for other significant projects because I’m studying and trying to get involved in other open-source projects concurrently. I prefer them over my own. My main selling point, which I tried to highlight, is my contributions to open-source. While this may seem basic to those reading this post, believe me, you’re not like most. Many people looking for jobs don’t really know how to make pull requests.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;Answers to questions&lt;&#x2F;em&gt;. Here, I might make many more mistakes, but I’m not aware of them because I try to be myself. I try to be honest and intriguing at the same time, almost in all of my responses. For instance, I directly mention that I haven’t worked with ‘X’ technology, but I’ve heard a lot of positive feedback and I’m willing to learn it. I also try to promote myself because I genuinely believe I’m a suitable candidate. It seems to me that this approach doesn’t work in the field of hiring since often HRs don’t have a deep understanding of technologies and may not understand me correctly. What should I respond? “Fake it till you make it” also seems wrong. Perhaps I should respond that I’m the ideal candidate and not try to show all my passion for the job and the desire to grow, even though everyone writes that they are looking for candidates like that.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;i-m-bad-what-s-next&quot;&gt;I’m bad, what’s next???&lt;a class=&quot;zola-anchor&quot; href=&quot;#i-m-bad-what-s-next&quot; aria-label=&quot;Anchor link for: i-m-bad-what-s-next&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Don’t get me wrong - I’m not complaining that I’m like this and that, expecting everything to be handed to me on a silver platter. No, I’m ready to grow and work&#x2F;grind further, but to do it more effectively, I try to better understand the principles of candidate selection so that I don’t keep making the same mistakes. I know I’ve chosen a challenging and lengthy path when I decided to work primarily with Rust rather than JavaScript or Python, but I’m not giving up. I like my current ambitions; I’m doing what interests me. I’m going to focus on a large project (10k+ loc) that I won’t be ashamed to show to others. After this, if I still haven’t achieved what I’m complaining about here, I’ll reconsider my life and existence.&lt;br &#x2F;&gt;
Perhaps in a month, this post will become outdated as I’ll learn so much new stuff that I’ll consider my present self as uninformed🧐.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>My first patch</title>
        <published>2023-08-16T00:00:00+00:00</published>
        <updated>2023-08-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://woojiq.github.io/blog/my-first-patch/" type="text/html"/>
        <id>https://woojiq.github.io/blog/my-first-patch/</id>
        
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;Article is translated with the assistance of ChatGPT.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;On August 16th, after two years of studying at the university, I found myself trying to make contributions to open-source projects to compensate for my lack of real-world experience. During a break between contributions to helix (9 pool requests, half of them were closed), I noticed that swappy doesn’t support layouts other than English, and it’s not very convenient to switch layouts when taking screenshots quicky. My time has come, I need to fix it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;swappy&quot;&gt;Swappy&lt;a class=&quot;zola-anchor&quot; href=&quot;#swappy&quot; aria-label=&quot;Anchor link for: swappy&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jtheoof&#x2F;swappy&#x2F;&quot;&gt;A Wayland native snapshot editing tool, inspired by Snappy on macOS.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;There’s a small issue – this repository hasn’t been updated for a long time. There are occasional commits, but they’re not enough to create a PR that would get merged, given the author’s inactivity. I understand that open-source projects are generally unpaid endeavors, but I need to continue using the application somehow. Switching to a different application isn’t always feasible if swappy is still useful despite being outdated. In another project, I would create a PR for such changes. But in this case it wouldn’t be merged, so the only way forward is to patch it for myself. It was difficult to adjust to this because if one of my motivations for contributing to open source is to have a nice GitHub profile for aesthetics, then in this case, that won’t apply. It won’t be added to the profile as “you created a PR with 200 lines of code”.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;nixos&quot;&gt;NixOs&lt;a class=&quot;zola-anchor&quot; href=&quot;#nixos&quot; aria-label=&quot;Anchor link for: nixos&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Luckily, I use &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;nixos.org&#x2F;&quot;&gt;NixOs&lt;&#x2F;a&gt;, which makes this process simple enough through overlays. It was still a bit complex, and it took me some time to figure out how to combine overlays with home-manager, but that’s a different story. The idea is that I can either use a pre-built project from &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nixos&#x2F;nixpkgs&#x2F;&quot;&gt;nixpkgs&lt;&#x2F;a&gt; or modify various attributes of a package (add patches, change dependencies, etc.). While this might be possible in other distributions too, I wasn’t interested. Anyway, I could just clone the repository. So, I realized that I wanted to patch swappy to support different keyboard layouts. Since it’s a personal patch, adding Ukrainian layout support would be sufficient (hardcoded).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;clangd-meson-headers-on-nixos&quot;&gt;Clangd &amp;amp; Meson &amp;amp; Headers on NixOs&lt;a class=&quot;zola-anchor&quot; href=&quot;#clangd-meson-headers-on-nixos&quot; aria-label=&quot;Anchor link for: clangd-meson-headers-on-nixos&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Initially, I needed to set up a development environment for C because I had only been working with Rust on NixOs. After my experience with excellent Rust tools (rust-analyzer, cargo), I needed at least a C language server. I required a &lt;code&gt;flake.nix&lt;&#x2F;code&gt; file with instructions to build the project and include devShell with C language server. I managed to create the first part quite easily, and within 20-30 minutes, I had a local build of swappy using &lt;code&gt;flake.nix&lt;&#x2F;code&gt;. In essence, I took &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NixOS&#x2F;nixpkgs&#x2F;blob&#x2F;b5116310bce262bfdf6653a7df7421ee468ca6b8&#x2F;pkgs&#x2F;applications&#x2F;misc&#x2F;swappy&#x2F;default.nix&quot;&gt;&lt;code&gt;default.nix&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; from &lt;code&gt;nixpkgs&lt;&#x2F;code&gt; and converted it to a flake. Everything seemed fine until I added clangd to devShell and ran &lt;code&gt;nix develop&lt;&#x2F;code&gt;, but something went wrong. I recalled from past attempts that dealing with libraries in NixOs could be complicated (in hindsight, the approach is logical, but not when you are beginner or in a hurry and don’t have time to read all the documentation). The language server wasn’t finding headers for gtk&#x2F;gdk. I spent an hour on this, to no avail. Frustrated, I gave up and went for a walk, convinced that I’d never need C anyway. I could have gone down that path if I hadn’t believed in myself. I realized that if I couldn’t write a line of C code and set up a C development environment, then why bother with NixOs if it’s all problems? It had to be solved because accumulating such grievances would have driven me to install Windows – a critical mistake. So, I googled a lot, asked ChatGPT for help, until I finally understood that clangd takes header locations from the &lt;code&gt;compile_commands.json&lt;&#x2F;code&gt; file generated by meson. I wasn’t well-versed in the inner workings of meson, meson vs make, and so on, but I knew I needed to run &lt;code&gt;meson setup build&lt;&#x2F;code&gt;. I ran it several times, and it indicated the missing components in my devShell. I added pango, cairo, and other dependencies, and meson eventually generated the required file. Joy knew no bounds – my language server was working, and I could write C code about 4 hours of setup.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;c-what-the&quot;&gt;C, What the?&lt;a class=&quot;zola-anchor&quot; href=&quot;#c-what-the&quot; aria-label=&quot;Anchor link for: c-what-the&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;However, understanding C wasn’t straightforward. After half a year in the Rust bubble, it was challenging to grasp the concept of simple pointers, the absence of needing &lt;code&gt;mut&lt;&#x2F;code&gt;, and the absence of a borrow checker. Also, there were lots of &lt;code&gt;*&lt;&#x2F;code&gt; and unfamiliar data types (&lt;code&gt;Gtk...&lt;&#x2F;code&gt;). But fortunately, I was previously familiar with C++ because I was a fan of competitive programming in school, so I’m somewhat acquainted with the syntax. Thankfully, using &lt;code&gt;ctrl-f&lt;&#x2F;code&gt; and GitHub, I quickly learned where to find the relevant code. I didn’t need to understand the inner workings deeply – I just needed to make gtk layout-agnostic. Later, I realized that this was essentially binding actions to hardware keycodes. Everything I found online that could help was a single &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;56951698&#x2F;how-to-convert-gtk-keyboard-event-keys-to-english-in-any-language-layouts&quot;&gt;question&lt;&#x2F;a&gt; on stackoverflow with just one comment. Then I tried to understand how to use this information, asking ChatGPT, but as usual, it couldn’t handle complex queries. I have a hunch as to why this didn’t work, but I don’t want to voice it because I’m not well-versed in gtk at all. So, I came up with a neat trick. Initially, since this was a personal patch, I thought I could simply add checks for all Ukrainian keys, like &lt;code&gt;GDK_KEY_Ukrainian_i&lt;&#x2F;code&gt;. But then, I realized that using &lt;code&gt;event-&amp;gt;hardware_keycode&lt;&#x2F;code&gt; would work just as well. So, that’s what I did. I’m not sure if it’s a good solution overall, but it works for me. There’s one downside to my solution, though, which makes me understand that while it’s generally better than the previous one, it still inaccurate sometimes.. If a user is using a layout other than QWERTY, copying in English won’t be &lt;code&gt;ctrl-c&lt;&#x2F;code&gt; but &lt;code&gt;ctrl-j&lt;&#x2F;code&gt; (Dvorak), for example. I’ve never used other layouts, so I don’t know what’s more convenient for them. Either way, it doesn’t work perfectly for these cases, so making a PR doesn’t make much sense. Thus, I created a patch of around 200 lines of deletions and additions. I tested it and it was time to integrate it into my working environment.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;overlay&quot;&gt;Overlay&lt;a class=&quot;zola-anchor&quot; href=&quot;#overlay&quot; aria-label=&quot;Anchor link for: overlay&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;After extracting and saving the patch, I started attempts to integrate it into my &lt;code&gt;flake.nix&lt;&#x2F;code&gt; so that all applications would use the patched version (patch is a very cute word). After 10 hours of work, from morning till evening, I finally managed to take a screenshot using the Ukrainian layout. I’m incredibly proud of this achievement. This is my first personal patch. I posted this solution in the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jtheoof&#x2F;swappy&#x2F;issues&#x2F;122&quot;&gt;issue&lt;&#x2F;a&gt;; maybe someone will find it useful.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;output-not-flake-s&quot;&gt;Output (not flake’s)&lt;a class=&quot;zola-anchor&quot; href=&quot;#output-not-flake-s&quot; aria-label=&quot;Anchor link for: output-not-flake-s&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Spending 10 hours of my day, I learned a lot of new things. And since it’s summer university vacation, I have no regrets about diving into this. I gained insights into Nix and C. But most importantly, those 200 lines of code gave me the realization that I can change software for my needs. And that’s an incredible feeling. It was somewhat reminiscent of when my first PR got merged. Plus, I didn’t clutter my computer with unnecessary stuff because nix package manager will remove it if I don’t need it, and that’s cool. It’s fascinating how one problem that doesn’t affect anything can bring so much into life, just because you decided to solve it😌.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
